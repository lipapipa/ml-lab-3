pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

      stage('Setup Environment') {
            steps {
                bat '''
                    "C:\\Users\\Egor\\AppData\\Local\\Programs\\Python\\Python311\\python.exe" -m venv .\\venv
                    call .\\venv\\Scripts\\activate.bat
                    "C:\\Users\\Egor\\AppData\\Local\\Programs\\Python\\Python311\\python.exe" -m pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Download Data') {
            steps {
                bat '''
                    .\\venv\\Scripts\\activate
                    python download.py
                '''
            }
        }

        stage('Train Model') {
            steps {
                bat '''
                    .\\venv\\Scripts\\activate
                    echo "Start train model"
                    python train_model.py > best_model.txt
                '''
            }
        }

   stage('Start MLflow Service') {
    steps {
        bat '''
            call .\\venv\\Scripts\\activate.bat
            
            # Читаем путь к модели
            set /p MODEL_PATH=<best_model.txt
            echo MODEL_PATH: %MODEL_PATH%
            
            # Запускаем сервер в отдельном окне с логами
            start "MLflowServer" cmd /k "mlflow models serve -m %MODEL_PATH% -p 5003 --host 0.0.0.0 --no-conda > mlflow_server.log 2>&1"
            
            # Даем время на запуск (30 секунд)
            timeout /t 30 /nobreak > nul
            
            # Проверяем процесс
            tasklist | findstr mlflow || echo "MLflow process not found"
            
            # Проверяем порт
            netstat -ano | findstr 5003 || echo "Port 5003 not listening"
            
            # Выводим логи сервера
            type mlflow_server.log
        '''
    }
}

stage('Test MLflow Service') {
    steps {
        bat '''
            # Проверка доступности сервера
            curl -v -m 10 http://127.0.0.1:5003 || echo "Server not responding"
            
            # Основной запрос
            curl -X POST http://127.0.0.1:5003/invocations ^
                 -H "Content-Type: application/json" ^
                 --data "{\\"inputs\\": [[-1.759, -1.234, -1.413, 0.761, 2.200, -0.109, 0.589, 0.113]]}"
        '''
    

            }
        }
    }
}
